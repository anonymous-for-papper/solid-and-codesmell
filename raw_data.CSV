What is your level of education?;How many years of professional experience do you have as a software developer?;What is your main programming language?;Have you heard about the SOLID software design principles?;Which SOLID principles do you know? (Select all that apply);How often do you think about the SOLID principles when writing code?;On a scale from very easy to very difficult, how do you rate the difficulty of applying each SOLID principle? [Single Responsibility Principle (SRP)];On a scale from very easy to very difficult, how do you rate the difficulty of applying each SOLID principle? [Open/Closed Principle (OCP)];On a scale from very easy to very difficult, how do you rate the difficulty of applying each SOLID principle? [Liskov Substitution Principle (LSP)];On a scale from very easy to very difficult, how do you rate the difficulty of applying each SOLID principle? [Interface Segregation Principle (ISP)];On a scale from very easy to very difficult, how do you rate the difficulty of applying each SOLID principle? [Dependency Inversion Principle (DIP)];"Are you familiar with the concept of ""code smells""?";Which of the following code smells do you recognize? (Select all that apply);Which SOLID principle would you apply to improve the design when handling the ”duplicated code” code smell?;"Which SOLID principle would you apply to improve the design when handling the ""long method"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""large class"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""divergent change"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""shotgun surgery"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""data clumps"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""primitive obsession"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""repeated switches"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""temporary field"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""refused bequest"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""alternative classes with different interfaces"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""global data"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""lazy element"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""speculative generality"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""feature envy"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""inappropriate intimacy"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""message chains"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""middleman"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""mutable data"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""loops"" code smell?";"Which SOLID principle would you apply to improve the design when handling the ""data classes"" code smell?";
Postgraduate degree;4-6 year;Typescript;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Very Easy;Moderate;Moderate;Very Easy;Moderate;Yes;Duplicated code, Long methods, Primitive obsession,Large class;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);Liskov Substitution Principle (LSP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Master's degree;7-10 year;Java;Yes;Open/Closed Principle (OCP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Frequently (A few times a week);Very Easy;Very Easy;Very Easy;Very Easy;Very Easy;Yes;Duplicated code, Repeated switches,Large class, Alternative classes with different interfaces, Refused bequest;Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);
Completed undergraduate degree;4-6 year;PHP;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Frequently (A few times a week);Easy;Moderate;Moderate;Easy;Very Easy;Yes;Duplicated code, Long methods, Global data, Mutable data,Divergent change, Shotgun surgery, Feature envy, Data clumps, Primitive obsession, Repeated switches, Loops, Lazy element, Speculative generality, Temporary field,Message chains, Middleman, Inappropriate intimacy,Large class, Alternative classes with different interfaces, Data classes, Refused bequest;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);;None of the principles can be applied;Liskov Substitution Principle (LSP);;Dependency Inversion Principle (DIP);Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);None of the principles can be applied;Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);Interface Segregation Principle (ISP);Liskov Substitution Principle (LSP);Open/Closed Principle (OCP);I don’t know this code smell;None of the principles can be applied;None of the principles can be applied;
Completed undergraduate degree;4-6 year;Typescript;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Always (Every day);Easy;Easy;Moderate;Moderate;Moderate;Yes;Duplicated code, Long methods,Divergent change, Data clumps, Repeated switches, Temporary field,Large class;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);I don’t know this code smell;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Liskov Substitution Principle (LSP);Interface Segregation Principle (ISP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Completed undergraduate degree;4-6 year;C#;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Very Easy;Easy;Moderate;Easy;Easy;Yes;Duplicated code, Long methods, Primitive obsession,Large class, Alternative classes with different interfaces;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;None of the principles can be applied;None of the principles can be applied;I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Completed undergraduate degree;7-10 year;Java;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Always (Every day);Very Easy;Easy;Hard;Very Easy;Moderate;Yes;Duplicated code, Long methods,Large class;Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
High school diploma;1-3 year;Typescript;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Frequently (A few times a week);Easy;Moderate;Hard;Hard;Moderate;Yes;Duplicated code, Long methods, Global data, Mutable data, Repeated switches, Temporary field;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Completed undergraduate degree;4-6 year;Javascript;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP);Frequently (A few times a week);Very Easy;Very Easy;Moderate;Moderate;Moderate;Yes;Duplicated code, Long methods, Global data, Shotgun surgery,Large class;None of the principles can be applied;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Completed undergraduate degree;4-6 year;PHP;No;;Never;;;;;;No;;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Incomplete undergraduate degree;1-3 year;C#;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Easy;Very Hard;Moderate;Moderate;Easy;Yes;Duplicated code, Long methods,Large class;Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);Dependency Inversion Principle (DIP);Liskov Substitution Principle (LSP);Open/Closed Principle (OCP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Completed undergraduate degree;7-10 year;C#;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Always (Every day);Easy;Very Easy;Easy;Very Easy;Easy;Yes;Duplicated code, Long methods, Global data, Mutable data, Shotgun surgery, Lazy element,Large class, Alternative classes with different interfaces;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);;;;;;;;;;;;;;;;;;
Postgraduate degree;7-10 year;Java;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Interface Segregation Principle (ISP);Occasionally (A few times a month);Very Easy;Moderate;Moderate;Moderate;Moderate;Yes;Duplicated code, Long methods, Global data,Divergent change, Data clumps, Repeated switches, Loops, Alternative classes with different interfaces;None of the principles can be applied;None of the principles can be applied;None of the principles can be applied;Single Responsibility Principle (SRP);I don’t know this code smell;Single Responsibility Principle (SRP);Liskov Substitution Principle (LSP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);None of the principles can be applied;None of the principles can be applied;Open/Closed Principle (OCP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Single Responsibility Principle (SRP);I don’t know this code smell;Open/Closed Principle (OCP);
Completed undergraduate degree;Over 10 year;PHP/Golang;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Frequently (A few times a week);Easy;Moderate;Hard;Moderate;Moderate;Yes;Duplicated code, Long methods, Mutable data,Divergent change, Feature envy, Primitive obsession, Repeated switches, Loops, Temporary field,Large class, Data classes, Refused bequest;Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Liskov Substitution Principle (LSP);I don’t know this code smell;Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);Open/Closed Principle (OCP);Dependency Inversion Principle (DIP);Dependency Inversion Principle (DIP);Interface Segregation Principle (ISP);None of the principles can be applied;Dependency Inversion Principle (DIP);I don’t know this code smell;Single Responsibility Principle (SRP);I don’t know this code smell;None of the principles can be applied;Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Open/Closed Principle (OCP);
Postgraduate degree;Over 10 year;C#;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP), Dependency Inversion Principle (DIP);Frequently (A few times a week);Easy;Hard;Moderate;Hard;Easy;Yes;Duplicated code, Long methods, Global data, Mutable data, Lazy element, Speculative generality,Large class;None of the principles can be applied;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;None of the principles can be applied;None of the principles can be applied;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;None of the principles can be applied;None of the principles can be applied;None of the principles can be applied;
Postgraduate degree;Over 10 year;Object-Pascal;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Always (Every day);Very Easy;Very Easy;Easy;Moderate;Moderate;Yes;Duplicated code, Long methods, Global data, Mutable data,Divergent change, Shotgun surgery, Primitive obsession, Repeated switches, Speculative generality,Message chains, Refused bequest;Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);Dependency Inversion Principle (DIP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);None of the principles can be applied;Single Responsibility Principle (SRP);I don’t know this code smell;Interface Segregation Principle (ISP);I don’t know this code smell;Dependency Inversion Principle (DIP);I don’t know this code smell;Open/Closed Principle (OCP);I don’t know this code smell;Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);I don’t know this code smell;Open/Closed Principle (OCP);Dependency Inversion Principle (DIP);I don’t know this code smell;
Completed undergraduate degree;1-3 year;PHP ;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Moderate;Moderate;Very Hard;Very Hard;Very Hard;Yes;Duplicated code, Long methods, Global data, Mutable data, Repeated switches;Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);I don’t know this code smell;Liskov Substitution Principle (LSP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;Dependency Inversion Principle (DIP);Open/Closed Principle (OCP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Completed undergraduate degree;1-3 year;JS;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Frequently (A few times a week);Easy;Moderate;Moderate;Easy;Moderate;Yes;Duplicated code, Long methods, Global data, Feature envy, Primitive obsession,Large class, Data classes;Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);Dependency Inversion Principle (DIP);I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);I don’t know this code smell;I don’t know this code smell;Open/Closed Principle (OCP);Interface Segregation Principle (ISP);None of the principles can be applied;I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);I don’t know this code smell;I don’t know this code smell;
Postgraduate degree;Over 10 year;Javascript;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Very Hard;Very Hard;Very Hard;Very Hard;Very Hard;Yes;Duplicated code, Long methods, Global data, Mutable data,Divergent change, Shotgun surgery, Feature envy, Data clumps, Primitive obsession, Repeated switches, Loops, Lazy element, Speculative generality, Temporary field,Message chains, Middleman, Inappropriate intimacy,Large class, Alternative classes with different interfaces, Data classes, Refused bequest;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Liskov Substitution Principle (LSP);Interface Segregation Principle (ISP);Dependency Inversion Principle (DIP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);Dependency Inversion Principle (DIP);Dependency Inversion Principle (DIP);Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);Single Responsibility Principle (SRP);
Postgraduate degree;Over 10 year;.Net C#;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Always (Every day);Easy;Easy;Hard;Moderate;Very Easy;Yes;Duplicated code, Long methods, Global data, Mutable data, Primitive obsession, Repeated switches, Loops,Large class;None of the principles can be applied;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);None of the principles can be applied;None of the principles can be applied;Liskov Substitution Principle (LSP);None of the principles can be applied;Liskov Substitution Principle (LSP);Interface Segregation Principle (ISP);Dependency Inversion Principle (DIP);None of the principles can be applied;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);None of the principles can be applied;None of the principles can be applied;None of the principles can be applied;None of the principles can be applied;None of the principles can be applied;
Completed undergraduate degree;4-6 year;C#;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Always (Every day);Moderate;Hard;Hard;Easy;Easy;Yes;Duplicated code, Long methods, Global data,Large class;Liskov Substitution Principle (LSP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Postgraduate degree;4-6 year;C#;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Frequently (A few times a week);Easy;Easy;Easy;Very Easy;Very Easy;Yes;Duplicated code, Long methods, Mutable data, Data clumps, Repeated switches, Loops, Lazy element, Temporary field,Large class, Alternative classes with different interfaces, Refused bequest;Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);I don’t know this code smell;Interface Segregation Principle (ISP);Open/Closed Principle (OCP);None of the principles can be applied;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;None of the principles can be applied;Single Responsibility Principle (SRP);I don’t know this code smell;
Doctorate;4-6 year;Javascript ;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Easy;Moderate;Moderate;Easy;Moderate;Yes;Duplicated code, Long methods, Global data,Divergent change, Feature envy, Primitive obsession, Repeated switches, Speculative generality,Message chains,Large class;Interface Segregation Principle (ISP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);Dependency Inversion Principle (DIP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);Liskov Substitution Principle (LSP);I don’t know this code smell;None of the principles can be applied;None of the principles can be applied;Interface Segregation Principle (ISP);I don’t know this code smell;Open/Closed Principle (OCP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);
Postgraduate degree;Over 10 year;c#;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Always (Every day);Moderate;Moderate;Moderate;Moderate;Moderate;Yes;Duplicated code, Loops, Lazy element;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);Interface Segregation Principle (ISP);Dependency Inversion Principle (DIP);Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);Single Responsibility Principle (SRP);Liskov Substitution Principle (LSP);Interface Segregation Principle (ISP);Dependency Inversion Principle (DIP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Dependency Inversion Principle (DIP);Dependency Inversion Principle (DIP);Open/Closed Principle (OCP);Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);
Postgraduate degree;4-6 years;JavaScript;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP), Liskov Substitution Principle (LSP), Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Frequently (A few times a week);Very Easy;Easy;Hard;Moderate;Easy;Yes;Duplicated code, Long methods, Global data, Data clumps, Primitive obsession, Repeated switches, Large classes;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);I don’t know this code smell;Dependency Inversion Principle (DIP);Liskov Substitution Principle (LSP);Dependency Inversion Principle (DIP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;None of the principles can be applied;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Completed undergraduate degree;4-6 year;Java;Yes;Interface Segregation Principle (ISP);Occasionally (A few times a month);Hard;Very Hard;Moderate;Easy;Easy;Yes;Duplicated code,Large class;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);;Open/Closed Principle (OCP);Interface Segregation Principle (ISP);Liskov Substitution Principle (LSP);Open/Closed Principle (OCP);Open/Closed Principle (OCP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);Interface Segregation Principle (ISP);Open/Closed Principle (OCP);Dependency Inversion Principle (DIP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Master's degree;Over 10 year;typescript;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP), Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Very Easy;Very Easy;Easy;Moderate;Moderate;Yes;Duplicated code, Long methods, Global data, Mutable data, Repeated switches, Loops, Lazy element, Message chains, Large classes, Alternative classes with different interfaces, Data classes;Single Responsibility Principle (SRP);None of the principles can be applied;None of the principles can be applied;Interface Segregation Principle (ISP);I don’t know this code smell;;;;;;;;;;;;;;;;;
Completed undergraduate degree;Less than 1 year;Java;No;;Never;Hard;Hard;Hard;Hard;Hard;No;;Single Responsibility Principle (SRP);I don’t know this code smell;Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Liskov Substitution Principle (LSP);Open/Closed Principle (OCP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Doctorate;7-10 years;;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP), Liskov Substitution Principle (LSP), Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Moderate;Hard;Hard;Moderate;Hard;Yes;Long methods, Global data;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Single Responsibility Principle (SRP);None of the principles can be applied;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;None of the principles can be applied;
Completed undergraduate degree;Over 10 year;PHP E JAVA;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Moderate;Moderate;Moderate;Moderate;Moderate;Yes;Duplicated code, Long methods, Global data, Mutable data, Loops, Temporary field;Single Responsibility Principle (SRP);Liskov Substitution Principle (LSP);Dependency Inversion Principle (DIP);I don’t know this code smell;;;;;;;;;;;;;;;;;;
Completed undergraduate degree;4-6 year;Javascript;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Frequently (A few times a week);Very Easy;Moderate;Very Easy;Moderate;Very Easy;No;;Dependency Inversion Principle (DIP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Open/Closed Principle (OCP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Master's degree;7-10 year;C#;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Moderate;Moderate;Very Hard;Easy;Easy;Yes;Duplicated code, Long methods, Global data, Mutable data,Divergent change, Shotgun surgery, Feature envy, Data clumps, Primitive obsession, Repeated switches, Loops, Lazy element, Speculative generality, Temporary field, Middleman,Large class, Alternative classes with different interfaces, Refused bequest;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);None of the principles can be applied;Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);Interface Segregation Principle (ISP);None of the principles can be applied;Open/Closed Principle (OCP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);None of the principles can be applied;Dependency Inversion Principle (DIP);Open/Closed Principle (OCP);None of the principles can be applied;Single Responsibility Principle (SRP);
Postgraduate degree;Over 10 year;C#;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Moderate;Moderate;Moderate;Moderate;Moderate;Yes;Duplicated code, Global data,Divergent change, Shotgun surgery, Data clumps, Primitive obsession, Repeated switches,Large class;Open/Closed Principle (OCP);Liskov Substitution Principle (LSP);Liskov Substitution Principle (LSP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Liskov Substitution Principle (LSP);Interface Segregation Principle (ISP);Dependency Inversion Principle (DIP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);
Completed undergraduate degree;4-6 year;C#;Yes;Single Responsibility Principle (SRP),Interface Segregation Principle (ISP);Frequently (A few times a week);Easy;Easy;Moderate;Easy;Easy;Yes;Duplicated code, Long methods,Large class;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
Master's degree;7-10 year;C/GO/Python/PHP/Java;Yes;Single Responsibility Principle (SRP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Never;Moderate;Moderate;Very Hard;Moderate;Very Hard;Yes;Duplicated code, Long methods, Global data, Mutable data, Primitive obsession, Repeated switches, Loops,Large class, Hard code ;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Interface Segregation Principle (ISP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;Single Responsibility Principle (SRP);Open/Closed Principle (OCP);I don’t know this code smell;
Completed undergraduate degree;Over 10 year;;Yes;Single Responsibility Principle (SRP), Open/Closed Principle (OCP),Liskov Substitution Principle (LSP),Interface Segregation Principle (ISP), Dependency Inversion Principle (DIP);Occasionally (A few times a month);Moderate;Moderate;Moderate;Moderate;Moderate;Yes;Duplicated code, Long methods, Repeated switches,Large class;;;;;;;;;;;;;;;;;;;;;;
Incomplete undergraduate degree;7-10 year;JavaScript;Yes;Single Responsibility Principle (SRP);Frequently (A few times a week);Easy;Easy;Moderate;Very Easy;;Yes;Duplicated code, Long methods, Mutable data, Repeated switches, Loops, Middleman,Large class, Alternative classes with different interfaces;Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);Open/Closed Principle (OCP);Single Responsibility Principle (SRP);Liskov Substitution Principle (LSP);Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);Liskov Substitution Principle (LSP);Single Responsibility Principle (SRP);Dependency Inversion Principle (DIP);Single Responsibility Principle (SRP);Interface Segregation Principle (ISP);Single Responsibility Principle (SRP);Single Responsibility Principle (SRP);
Incomplete undergraduate degree;Over 10 year;PHP ;Yes;Single Responsibility Principle (SRP), Dependency Inversion Principle (DIP);Frequently (A few times a week);Very Easy;Moderate;;Moderate;Very Easy;Yes;Duplicated code, Long methods,Large class;Single Responsibility Principle (SRP);I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;None of the principles can be applied;I don’t know this code smell;None of the principles can be applied;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;None of the principles can be applied;I don’t know this code smell;None of the principles can be applied;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;I don’t know this code smell;
